(function() {var implementors = {};
implementors["cargo_update"] = [{"text":"impl Ord for ConfigOperation","synthetic":false,"types":[]},{"text":"impl Ord for PackageConfig","synthetic":false,"types":[]},{"text":"impl Ord for PackageFilterElement","synthetic":false,"types":[]}];
implementors["git2"] = [{"text":"impl Ord for Sort","synthetic":false,"types":[]},{"text":"impl Ord for CredentialType","synthetic":false,"types":[]},{"text":"impl Ord for IndexEntryFlag","synthetic":false,"types":[]},{"text":"impl Ord for IndexEntryExtendedFlag","synthetic":false,"types":[]},{"text":"impl Ord for IndexAddOption","synthetic":false,"types":[]},{"text":"impl Ord for RepositoryOpenFlags","synthetic":false,"types":[]},{"text":"impl Ord for RevparseMode","synthetic":false,"types":[]},{"text":"impl Ord for MergeAnalysis","synthetic":false,"types":[]},{"text":"impl Ord for MergePreference","synthetic":false,"types":[]},{"text":"impl Ord for Oid","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Ord for Reference&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl Ord for Time","synthetic":false,"types":[]},{"text":"impl Ord for IndexTime","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for TreeEntry&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Ord for Status","synthetic":false,"types":[]},{"text":"impl Ord for RepositoryInitMode","synthetic":false,"types":[]},{"text":"impl Ord for SubmoduleStatus","synthetic":false,"types":[]},{"text":"impl Ord for PathspecFlags","synthetic":false,"types":[]},{"text":"impl Ord for CheckoutNotificationType","synthetic":false,"types":[]},{"text":"impl Ord for DiffStatsFormat","synthetic":false,"types":[]},{"text":"impl Ord for StashApplyFlags","synthetic":false,"types":[]},{"text":"impl Ord for StashFlags","synthetic":false,"types":[]},{"text":"impl Ord for AttrCheckFlags","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Ord for Level","synthetic":false,"types":[]},{"text":"impl Ord for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Ord for Ident","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Ord for Span","synthetic":false,"types":[]},{"text":"impl Ord for Position","synthetic":false,"types":[]},{"text":"impl Ord for Literal","synthetic":false,"types":[]},{"text":"impl Ord for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Ord for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Ord for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Ord for Utf8Range","synthetic":false,"types":[]}];
implementors["semver"] = [{"text":"impl Ord for Identifier","synthetic":false,"types":[]},{"text":"impl Ord for Version","synthetic":false,"types":[]},{"text":"impl Ord for VersionReq","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Ord for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Ord,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Ord for Lifetime","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Ord for Level","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S:&nbsp;Ord&gt; Ord for Host&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Ord for Url","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V:&nbsp;Ord&gt; Ord for VecMap&lt;V&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()