(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl Hash for Match","synthetic":false,"types":[]}];
implementors["cargo_update"] = [{"text":"impl Hash for Options","synthetic":false,"types":[]},{"text":"impl Hash for ConfigOptions","synthetic":false,"types":[]},{"text":"impl Hash for ConfigOperation","synthetic":false,"types":[]},{"text":"impl Hash for PackageConfig","synthetic":false,"types":[]},{"text":"impl Hash for RegistryPackage","synthetic":false,"types":[]},{"text":"impl Hash for GitRepoPackage","synthetic":false,"types":[]},{"text":"impl Hash for PackageFilterElement","synthetic":false,"types":[]}];
implementors["git2"] = [{"text":"impl Hash for Sort","synthetic":false,"types":[]},{"text":"impl Hash for CredentialType","synthetic":false,"types":[]},{"text":"impl Hash for IndexEntryFlag","synthetic":false,"types":[]},{"text":"impl Hash for IndexEntryExtendedFlag","synthetic":false,"types":[]},{"text":"impl Hash for IndexAddOption","synthetic":false,"types":[]},{"text":"impl Hash for RepositoryOpenFlags","synthetic":false,"types":[]},{"text":"impl Hash for RevparseMode","synthetic":false,"types":[]},{"text":"impl Hash for MergeAnalysis","synthetic":false,"types":[]},{"text":"impl Hash for MergePreference","synthetic":false,"types":[]},{"text":"impl Hash for Oid","synthetic":false,"types":[]},{"text":"impl Hash for Status","synthetic":false,"types":[]},{"text":"impl Hash for RepositoryInitMode","synthetic":false,"types":[]},{"text":"impl Hash for SubmoduleStatus","synthetic":false,"types":[]},{"text":"impl Hash for PathspecFlags","synthetic":false,"types":[]},{"text":"impl Hash for CheckoutNotificationType","synthetic":false,"types":[]},{"text":"impl Hash for DiffStatsFormat","synthetic":false,"types":[]},{"text":"impl Hash for StashApplyFlags","synthetic":false,"types":[]},{"text":"impl Hash for StashFlags","synthetic":false,"types":[]},{"text":"impl Hash for AttrCheckFlags","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Hash for Level","synthetic":false,"types":[]},{"text":"impl Hash for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Hash for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Hash for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Hash for Ident","synthetic":false,"types":[]}];
implementors["semver"] = [{"text":"impl Hash for Identifier","synthetic":false,"types":[]},{"text":"impl Hash for Version","synthetic":false,"types":[]},{"text":"impl Hash for VersionReq","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Hash for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Hash,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Hash for Member","synthetic":false,"types":[]},{"text":"impl Hash for Index","synthetic":false,"types":[]},{"text":"impl Hash for Lifetime","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S:&nbsp;Hash&gt; Hash for Host&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Hash for Origin","synthetic":false,"types":[]},{"text":"impl Hash for OpaqueOrigin","synthetic":false,"types":[]},{"text":"impl Hash for Url","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V:&nbsp;Hash&gt; Hash for VecMap&lt;V&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()